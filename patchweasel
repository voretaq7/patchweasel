#!/bin/sh
#
# Patch Weasel - A tool to patch systems.
#
# "This is just a dumb terminal. It can't do ANYTHING by itself!"
#     - Space Quest Narrator
#
# mikeg@bsd-box.net 2024-10-10

## Set Version
PW_VERSION="1.0.0"

## Load configuration from /etc/patchweasel.conf 
## and/or /usr/local/etc/patchweasel.comf
if [ -f /etc/patchweasel.conf ]; then
	. /etc/patchweasel.conf
fi
if [ -f /usr/local/etc/patchweasel.conf ]; then
	. /usr/local/etc/patchweasel.conf
fi

# Pre-Populate PatchWeasel Variables
PW_USAGE=0
PW_FORCE=${PW_FORCE:-0}
PW_VERBOSE=${PW_VERBOSE:-0}
PW_SCRIPTDIR=${PW_SCRIPTDIR:-"/usr/local/libexec/patchweasel/scripts"}
PW_DRIVER_DIR=${PW_DRIVER_DIR:-"/usr/local/libexec/patchweasel/drivers"}
PW_DRIVER_NAME=${PW_DRIVER_NAME:-"EXAMPLE"}


## Errors & Warnings to stdout
pw_error() { echo "ERROR: $@"   1>&2 ; }
pw_warn()  { echo "WARNING: $@" 1>&2 ; }
pw_echo()  {
	if [ "${PW_VERBOSE}" -ne 0 ]; then
		echo "$@"
	fi
}

pw_precmd() {
	retval=0
	pw_echo "Executing PatchWeasel Pre-Commands"

	# Run driver pre-commands
	pw_driver_precmd
	rc=$?
	if [ $rc -ne 0 ] ; then
		pw_error "Driver ${PW_DRIVER_NAME} precmd failed."
		if [ $PW_FORCE -eq 0 ]; then
			exit $rc
		else
			pw_error "  Force specified, continuing anyway!"
		fi
	fi

	pw_echo "Script Directory: ${PW_SCRIPTDIR}/pre"
	if [ -d ${PW_SCRIPTDIR}/pre ] ; then
		for s in `find ${PW_SCRIPTDIR}/pre -type f -name '*.pws' | sort` ; do
			[ -e "$s" ] || continue
			pw_echo "  $s"
			$s
			rc=$?
			if [ $rc -ne 0 ]; then
				pw_error "PatchWeasel pre-script `basename $s` failed (${rc})!"
				if [ $PW_FORCE -eq 0 ]; then 
					exit $?
				else
					pw_error "  Force specified, continuing anyway!"
				fi
			fi
		done
	else
		pw_error "Pre-Script Directory ${PW_SCRIPTDIR}/pre does not exist or is not a directory."
		if [ $PW_FORCE -ne 1 ]; then
			exit 1
		else
			pw_error "Force specified - Continuing anyway."
		fi
	fi
	return $retval
}

pw_patch() {
	pw_echo "Executing PatchWeasel Patch Commands"
	pw_driver_patch
}

pw_postcmd() {
	pw_echo "Executing PatchWeasel Post-Commands"

	pw_driver_postcmd
	rc=$?
	if [ $rc -ne 0 ] ; then
		pw_error "Driver ${PW_DRIVER_NAME} postcmd failed."
		if [ $PW_FORCE -eq 0 ]; then
			exit $rc
		else
			pw_error "  Force specified, continuing anyway!"
		fi
	fi

	pw_echo "Script Directory: ${PW_SCRIPTDIR}/post"
	if [ -d ${PW_SCRIPTDIR}/post ] ; then
		for s in `find ${PW_SCRIPTDIR}/post -type f -name '*.pws' | sort` ; do
			[ -e "$s" ] || continue
			pw_echo "  $s"
			$s
			rc=$?
			if [ $rc -ne 0 ]; then
				pw_error "PatchWeasel post-script `basename $s` failed (${rc})!"
				if [ $PW_FORCE -eq 0 ]; then 
					exit $?
				else
					pw_error "  Force specified, continuing anyway!"
				fi
			fi
		done
	else
		pw_error "Pre-Script Directory ${PW_SCRIPTDIR}/post does not exist or is not a directory."
		if [ $PW_FORCE -ne 1 ]; then
			exit 1
		else
			pw_error "Force specified - Continuing anyway."
		fi
	fi
}

usage() {
	cat <<EOU
`basename $0` [-v] [-f] [-D <driver_dir>] [-d <driver_name>]
              [-S <script_dir>]

EOU
	pw_driver_usage
	exit 3
}

## Parse PatchWeasel arguments
while getopts 'D:d:fhS:v-:' OPT; do
	if [ "x${OPT}" = "x-" ]; then
		OPT="${OPTARG%%=*}"
		OPTARG="${OPTARG#"$OPT"}"
		OPTARG="${OPTARG#=}"
	fi
	case "$OPT" in
		D | driver_dir ) PW_DRIVER_DIR=${OPTARG} ;;
		d | driver_name ) PW_DRIVER_NAME=${OPTARG} ;;
		f | force ) PW_FORCE=1 ;;
		h | help ) PW_USAGE=1 ;;
		S | script_dir ) PW_SCRIPTDIR=${OPTARG} ;;
		v ) PW_VERBOSE=1 ;;
		version ) echo "PatchWeasel $PW_VERSION" ; exit 0 ;;
		\? ) PW_USAGE=1 ;; ## Bad Short Option
		* ) 
			## Any unrecognized long option becomes
			## PW_DRIVER_${OPT} for the driver.
			export PW_DRIVER_${OPT}=${OPTARG}
			;;
	esac
done

### Load PatchWeasel Driver
if [ \! -f "${PW_DRIVER_DIR}/${PW_DRIVER_NAME}" ]; then
	pw_error "Driver ${PW_DRIVER_NAME} not found in ${PW_DRIVER_DIR}"
	if [ $PW_FORCE -eq 0 ]; then
		exit 1
	else
		pw_error "  Force specified, contining with NULL driver in 5 seconds."
		pw_error "  THIS MAY BE DANGEROUS! - Hit Control+C to abort!"
    sleep 5
		pw_driver_precmd() { }
		pw_driver_postcmd() { }
		pw_driver_patch() { }
		pw_driver_usage() { }
	fi
else
	. ${PW_DRIVER_DIR}/${PW_DRIVER_NAME}
fi

### Bail with usage instructions if requested.
if [ $PW_USAGE -eq 1 ]; then
	usage
fi


pw_precmd
pw_patch
pw_postcmd
